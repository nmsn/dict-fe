import type { NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import styled, { ThemeProvider } from "styled-components";
import DictSearchItem from "@/components/DictSearchItem";
import DictSearchInput from "@/components/DictSearchInput";
import DictStatItem from "@/components/DictStatItem";

import { getStat } from "../service/dict";

const StyledPage = styled.div`
  width: 100vw;
  height: 100vh;
`;

const StyledMain = styled.main`
  width: 100vw;
  padding: 100px 0;

  display: flex;
  flex-direction: column;
  justify-content: center;
`;

const StyledBlockContainer = styled.div`
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
`;

const StyledStatList = styled(StyledBlockContainer)`
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;

  > div {
    margin-bottom: 10px;
  }
`;

const dictTheme = {
  themeColor: "#f7ebb6",
  themeTextColor: "skyblue",
  defaultTextFontSize: "16px",
  borderRadius: "5px",
  itemPadding: "20px",
};

interface QueryItemProps {
  query: string;
  count: number;
}

const QueryList = ({ data }: { data: QueryItemProps[] }) => {
  return (
    <StyledStatList>
      {data.map(({ query, count }: QueryItemProps, index: number) => (
        <DictStatItem
          key={index.toString()}
          index={index + 1}
          num={count}
          text={query}
        />
      ))}
    </StyledStatList>
  );
};

const DictPage: NextPage = ({ stat }) => {
  const [searchResult, setSearchResult] = useState([]);
  const { youdao, baidu } = stat;
  return (
    <StyledPage>
      <ThemeProvider theme={dictTheme}>
        <Head>
          <title>Dict</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <StyledMain>
          <StyledBlockContainer>
            <DictSearchInput onSave={setSearchResult} />
          </StyledBlockContainer>

          <StyledBlockContainer>
            {searchResult.map(({ query, translation, type }) => (
              <DictSearchItem
                key={type}
                type={type}
                result={translation}
                source={query}
              />
            ))}
          </StyledBlockContainer>
          <StyledBlockContainer>
            <QueryList data={youdao} />
            <QueryList data={baidu} />
          </StyledBlockContainer>
        </StyledMain>
      </ThemeProvider>
    </StyledPage>
  );
};

// 此函数在构建时被调用
export async function getStaticProps() {
  // 调用外部 API 获取博文列表
  try {
    const { data } = await getStat();
    console.log(data);

    return {
      props: {
        stat: data,
      },
    };
  } catch (e) {
    return {};
  }
}

export default DictPage;
